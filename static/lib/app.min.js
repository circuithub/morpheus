/*
 * Copyright 2011, CircuitHub.com
 */"use strict",function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F=Array.prototype.slice;l=function(a,b,c,d){var e;return e=a.get(b),e[c]=d,a.set(b,e)},t=function(a){return[a.x,a.y,a.z]},u=function(a){return[a.x,a.y,a.z,a.w]},A=function(a){return{x:a[0],y:a[1],z:a[2]}},B=function(a){return{x:a[0],y:a[1],z:a[2],w:a[3]}},j=function(a){var b,c,d,e,f,g;return b=t(a.eye),c=t(a.look),d=t(a.up),e=[0,0,0],f=[0,0,0],g=[0,0,0],SceneJS_math_subVec3(c,b,g),SceneJS_math_cross3Vec3(d,g,e),SceneJS_math_cross3Vec3(g,e,f),SceneJS_math_normalizeVec3(e),SceneJS_math_normalizeVec3(f),SceneJS_math_normalizeVec3(g),SceneJS_math_newQuaternionFromMat3(e.concat(f,g))},r=function(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s;return a[0]===0&&a[1]===0?{eye:c.eye,up:c.up}:(f=t(c.eye),q=t(c.up),j=t(c.look),g=SceneJS_math_lenVec3(f),h=[0,0,0],SceneJS_math_mulVec3Scalar(f,1/g,h),m=[0,0,0],SceneJS_math_cross3Vec3(q,f,m),n=SceneJS_math_normalizeVec3(m),r=[0,0,0],SceneJS_math_cross3Vec3(h,n,r),d=[n[0]*-a[1]+r[0]*-a[0],n[1]*-a[1]+r[1]*-a[0],n[2]*-a[1]+r[2]*-a[0]],e=SceneJS_math_lenVec2(a),l=SceneJS_math_rotationMat4v(e,d),i=SceneJS_math_transformVector3(l,f),o=SceneJS_math_transformVector3(l,m),p=[0,0,0],SceneJS_math_mulVec3(o,b,p),SceneJS_math_subVec3(o,p),s=[0,0,0],SceneJS_math_cross3Vec3(i,o,s),k={eye:A(i),look:c.look,up:A(s)})},s=function(a,b,c){return a.set(r(b,c,{eye:a.get("eye"),look:a.get("look"),up:a.get("up")}))},D=function(a,b,c){var d,e,f,g,h,i;return d=t(c.eye),h=t(c.look),e=SceneJS_math_lenVec3(d),b!=null?g=Math.clamp(e+a,b[0],b[1]):g=e+a,f=[0,0,0],SceneJS_math_mulVec3Scalar(d,g/e,f),i={eye:A(f),look:c.look,up:c.up}},E=function(a,b,c){return a.set(D(b,c,{eye:a.get("eye"),look:a.get("look"),up:a.get("up")}))},k={},k.log=typeof console!="undefined"&&console!==null&&console.log!=null?function(){return console.log.apply(console,arguments)}:function(){},Array.prototype.flatten=function(){var a,b;return(b=[]).concat.apply(b,function(){var b,c,d;d=[];for(b=0,c=this.length;b<c;b++)a=this[b],d.push(Array.isArray(a)?flatten(a):[a]);return d}.call(this))},Math.clamp=function(a,b,c){return Math.min(Math.max(a,b),c)},d=function(a,b){var c,d,e;return d="(function(){\n  /* BEGIN API */\n  "+z.api.sourceCode+"  \n  /* BEGIN SOURCE */\n  return scene(\n",c="  \n  );\n})();",e=JSandbox.eval({data:d+a+c,callback:function(a){return b(a)},onerror:function(a,b){}})},c=function(a){var b,c,d;b={union:function(){var a;return a=1<=arguments.length?F.call(arguments,0):[],{type:"union",nodes:a.flatten()}},intersect:function(){var a,b;return a=arguments[0],b=2<=arguments.length?F.call(arguments,1):[],{type:"intersect",attr:a,nodes:b.flatten()}},invert:function(){var a;return a=1<=arguments.length?F.call(arguments,0):[],{type:"invert",nodes:a.flatten()}},halfspace:function(){var a,b;return a=arguments[0],b=2<=arguments.length?F.call(arguments,1):[],{type:"halfspace",attr:a}}},d={scene:function(a){var d;return a.nodes.length>1?b.union.apply(b,function(){var b,e,f,g;f=a.nodes,g=[];for(b=0,e=f.length;b<e;b++)d=f[b],g.push(c(d));return g}()):a.nodes.length===1?c(a.nodes[0]):{}},box:function(a){var c,d;return d=[b.halfspace({val:-a.attr.dimensions[0],axis:0}),b.halfspace({val:-a.attr.dimensions[1],axis:1}),b.halfspace({val:-a.attr.dimensions[2],axis:2}),b.halfspace({val:a.attr.dimensions[0],axis:0}),b.halfspace({val:a.attr.dimensions[1],axis:1}),b.halfspace({val:a.attr.dimensions[2],axis:2})],a.attr.chamfer!=null?(a.attr.chamfer.edges.reduce(function(a,b){return a+Math.pow(2,b)}),c=Math.pow(2,12)-1,chamferEdges===c?a.attr.chamfer.corners?b.intersect({chamfer:!0},d[0],d[1],d[2],b.invert.apply(b,d.slice(3,7))):b.intersect({chamfer:!0},b.intersect({chamfer:!0},d[0],d[1],b.invert(d[3],d[4]),d[2],b.invert(d[5]))):b.intersect({},d[0],d[1],d[2],b.invert.apply(b,d.slice(3,7)))):b.intersect({},d[0],d[1],d[2],b.invert.apply(b,d.slice(3,7)))},sphere:function(a){return{}},cylinder:function(a){return{}}},c=function(a){switch(typeof a){case"object":return d[a.type]!=null?d[a.type](a):(k.log("Unexpected node type '"+a.type+"'."),{});default:return k.log("Unexpected node of type '"+typeof a+"'."),{}}};if(a.type!=="scene"){k.log("Expected node of type 'scene' at the root of the solid model, instead, got '"+a.type+"'.");return}return c(a)},e=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n;return d={sphereDist:{id:"__sphereDist",returnType:"float",arguments:["vec3","float"],code:function(){var a,b;return a="a",b="b",["return length("+a+") - "+b+";"]}()},boxDist:{id:"__boxDist",arguments:["vec3","vec3"],code:function(){var a,b,c,d;return b="a",c="b",d="r",a="s",["if (all(lessThan("+b+", "+c+")))","  return 0.0;","vec3 "+a+" = max(vec3(0.0), "+d+" - "+b+");","return max(max("+a+".x, "+a+".y), "+a+".z);"]}()},boxChamferDist:{id:"__boxChamferDist",arguments:["vec3","vec3","vec3","float"],code:function(){var a,b,c,d,e,f,g,h,i,j;return h="a",a="b",i="c",e="d",j="r",f="s",b="cc",c="ccd",d="ccdl",g="gtcc",["vec3 "+j+" = abs("+h+" - "+a+");","vec3 "+f+" = max(vec3(0.0), "+j+" - "+a+");","if (any(greaterThan("+j+", "+a+" + vec3("+e+")))) { return max(max("+f+".x, "+f+".y), "+f+".z); }","vec3 "+b+" = "+i+" - vec3("+e+");","bvec3 "+g+" = greaterThan("+j+", "+b+");","if (!any("+g+")) { return 0.0; }","vec3 "+c+" = "+j+" - "+b+";","if (min("+c+".x, "+c+".y) < 0.0 && min("+c+".x, "+c+".z) < 0.0 && min("+c+".y, "+c+".z) < 0.0)","{ return max(max("+f+".x, "+f+".y), "+f+".z); }","float "+d+";","if (all("+g+")) {","  "+d+" = length("+c+");","}","else if("+c+".x < 0.0) {","  "+d+" = length("+c+".yz);","}","else if ("+c+".y < 0.0) {","  "+d+" = length("+c+".xz);","}","else { // "+c+".z < 0.0","  "+d+" = length("+c+".xy);","}","return min("+d+" - "+e+", 0.0);"]}(),intersectDist:{id:"__intersectDist",arguments:["float","float"],code:["return max(a,b);"]},differenceDist:{id:"__differenceDist",arguments:["float","float"],code:["return max(a,-b);"]},unionDist:{id:"__unionDist",arguments:["float","float"],code:["return min(a,b);"]}}},j="#ifdef GL_ES\n  precision highp float;\n#endif\nuniform vec3 SCENEJS_uEye;                  // World-space eye position\nvarying vec3 SCENEJS_vEyeVec;               // Output world-space eye vector\nvarying vec4 SCENEJS_vWorldVertex;          // Varying for fragment clip or world pos hook\n",n="",k=function(a){return"\nfloat sceneDist(in vec3 ro){ return "+a+"; }\n\n"},m="float sceneRayDist(in vec3 ro, in vec3 rd) {\n  return 0.0;\n}\n",l="vec3 sceneNormal(in vec3 p) {\n  const float eps = 0.0001;\n  vec3 n;\n  n.x = sceneDist( vec3(p.x+eps, p.yz) ) - sceneDist( vec3(p.x-eps, p.yz) );\n  n.y = sceneDist( vec3(p.x, p.y+eps, p.z) ) - sceneDist( vec3(p.x, p.y-eps, p.z) );\n  n.z = sceneDist( vec3(p.xy, p.z+eps) ) - sceneDist( vec3(p.xy, p.z-eps) );\n  return normalize(n);\n}\n",h="void main(void) {\n  const int steps = 64;\n  const float threshold = 0.01;\n  vec3 rayDir = /*normalize*/(/*SCENEJS_uMMatrix * */ -SCENEJS_vEyeVec);\n  vec3 rayOrigin = SCENEJS_vWorldVertex.xyz;\n  bool hit = false;\n  float dist = 0.0;\n  for(int i = 0; i < steps; i++) {\n    //dist = sceneRayDist(rayOrigin, rayDir);\n    dist = sceneDist(rayOrigin);\n    if (dist < threshold) {\n      hit = true;\n      break;\n    }\n    rayOrigin += dist * rayDir;\n  }\n  if(!hit) { discard; }\n  /*if(!hit) { gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0); return; }*/\n  const vec3 diffuseColor = vec3(0.1, 0.2, 0.8);\n  /*const vec3 specularColor = vec3(1.0, 1.0, 1.0);*/\n  const vec3 lightPos = vec3(1.5,1.5, 4.0);\n  vec3 ldir = normalize(lightPos - rayOrigin);\n  vec3 diffuse = diffuseColor * dot(sceneNormal(rayOrigin), ldir);\n  gl_FragColor = vec4(diffuse, 1.0);\n}\n",i=function(a,b){var c;return c=b[a.type]},b=function(a,b,c,e){var f,g,h,i,j,k,l,m,n,o,p,q,r,s,t;m="rp",h=function(a,b,c){var d,e,f;for(e=0,f=a.length;e<f;e++){d=a[e];switch(d.type){case"halfspace":c[d.attr.axis+(b.invert?3:0)].push(d.attr.val);break;case"invert":b.invert=!b.invert,c=h(d.nodes,b,c),b.invert=!b.invert}}return c};if(a.nodes.length===0)return;j=[];for(k=0;k<=5;k++)j.push([]);j=h(a.nodes,!1,j);if(j[0].length>0&&j[1].length>0&&j[2].length>0&&j[3].length>0&&j[4].length>0&&j[5].length>0){c.box=!0,s=j.slice(0,3);for(o=0,q=s.length;o<q;o++)n=s[o],f=n.reduce(Math.max);t=j.slice(3,6);for(p=0,r=t.length;p<r;p++)n=t[p],f.concat(n.reduce(Math.min));g=[f[0]+f[3],f[2]+f[4],f[3]+f[5]],l=""+m;if(g[0]!==0||g[1]!==0||g[2]!==0)l+=" - vec3("+g[0]+","+g[1]+","+g[2]+")";return i=""+d.boxDist+"("+l+")"}},c=function(a,d,e){var f,g,h,i,j,k;switch(a.type){case"union":c.unionDist=!0,j=a.nodes,k=[];for(h=0,i=j.length;h<i;h++)g=j[h],k.push(c(g));return k;case"intersect":return b(a,d,e);default:return f="1.0/0.0",""+f}},g={},f="",e={invert:!1},f=c(a,e,g),j+k(f)+l+h},f={canvas:{defaultSize:[512,512]},camera:{maxOrbitSpeed:Math.PI*.1,orbitSpeedFactor:.02,zoomSpeedFactor:.5}},z={scene:SceneJS.scene("Scene"),canvas:document.getElementById("scenejsCanvas"),viewport:{domElement:document.getElementById("viewport"),mouse:{last:[0,0],leftDragging:!1,middleDragging:!1}},api:{url:null,sourceCode:null},application:{initialized:!1}},m=function(a){var b,c,d,e;b=[0,0];if(!a)a=window.event,b=[a.x,a.y];else{c=a.target,d=0,e=0;while(c.offsetParent)d+=c.offsetLeft,e+=c.offsetTop,c=c.offsetParent;b=[a.pageX-d,a.pageY-e]}return b},C=function(){},n=function(a){switch(a.which){case 1:return z.viewport.mouse.leftDragging=!0}},p=function(a){return z.viewport.mouse.leftDragging=!1},o=function(a){var b,c,d;return z.viewport.mouse.leftDragging&&(b=[a.clientX-z.viewport.mouse.last[0],a.clientY-z.viewport.mouse.last[1]],c=SceneJS_math_lenVec2(b),d=[0,0],SceneJS_math_mulVec2Scalar(b,f.camera.orbitSpeedFactor/c,d),d=[Math.clamp(d[0],-f.camera.maxOrbitSpeed,f.camera.maxOrbitSpeed),Math.clamp(d[1],-f.camera.maxOrbitSpeed,f.camera.maxOrbitSpeed)],s(z.scene.findNode("main-lookAt"),d,[0,0,1])),z.viewport.mouse.last=[a.clientX,a.clientY]},q=function(a){var b,c;return b=a.wheelDelta!=null?a.wheelDelta/-120:Math.clamp(a.detail,-1,1),c=b*f.camera.zoomSpeedFactor,E(z.scene.findNode("main-lookAt"),c)},i=function(a){},h=function(){try{return z.scene.findNode("main-shader").set("shaders",[{stage:"fragment",code:d($("#source-code").val(),function(a){return e(c(a))})}])}catch(a){return k.log(a)}},w=function(){return z.viewport.domElement.addEventListener("mousedown",n,!0),z.viewport.domElement.addEventListener("mouseup",p,!0),z.viewport.domElement.addEventListener("mousemove",o,!0),z.viewport.domElement.addEventListener("mousewheel",q,!0),z.viewport.domElement.addEventListener("DOMMouseScroll",q,!0),document.addEventListener("keydown",i,!0),window.addEventListener("resize",C,!0)},v=function(){return $("#source-compile").click(h)},x=function(){},b=function(){return C()},y=function(){var a;return a={type:"shader",id:"main-shader",shaders:[{stage:"fragment",code:e(c({type:"scene",nodes:[]}))}],vars:{}},z.scene.findNode("cube-mat").insert("node",a)},g=function(){},a=function(){return z.api.url=$("link[rel='api']").attr("href"),$.get(encodeURIComponent(z.api.url,void 0,void 0,"text")).success(function(a,b,c){return z.api.sourceCode=a,k.log("Loaded "+z.api.url)}).error(function(){return k.log("Error loading API script")})},b(),y(),z.scene.start({idleFunc:x}),$(function(){return a(),g(),w(),v(),z.application.initialized=!0})}.call(this);
/*
 * Copyright header comes here
 */"use strict",function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D=Array.prototype.slice;i=function(a,b,c,d){var e;return e=a.get(b),e[c]=d,a.set(b,e)},q=function(a){return[a.x,a.y,a.z]},r=function(a){return[a.x,a.y,a.z,a.w]},y=function(a){return{x:a[0],y:a[1],z:a[2]}},z=function(a){return{x:a[0],y:a[1],z:a[2],w:a[3]}},h=function(a){var b,c,d,e,f,g;return b=q(a.eye),c=q(a.look),d=q(a.up),e=[0,0,0],f=[0,0,0],g=[0,0,0],SceneJS_math_subVec3(c,b,g),SceneJS_math_cross3Vec3(d,g,e),SceneJS_math_cross3Vec3(g,e,f),SceneJS_math_normalizeVec3(e),SceneJS_math_normalizeVec3(f),SceneJS_math_normalizeVec3(g),SceneJS_math_newQuaternionFromMat3(e.concat(f,g))},o=function(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,r,s,t;return a[0]===0&&a[1]===0?{eye:c.eye,up:c.up}:(f=q(c.eye),r=q(c.up),j=q(c.look),g=SceneJS_math_lenVec3(f),h=[0,0,0],SceneJS_math_mulVec3Scalar(f,1/g,h),m=[0,0,0],SceneJS_math_cross3Vec3(r,f,m),n=SceneJS_math_normalizeVec3(m),s=[0,0,0],SceneJS_math_cross3Vec3(h,n,s),d=[n[0]*-a[1]+s[0]*-a[0],n[1]*-a[1]+s[1]*-a[0],n[2]*-a[1]+s[2]*-a[0]],e=SceneJS_math_lenVec2(a),l=SceneJS_math_rotationMat4v(e,d),i=SceneJS_math_transformVector3(l,f),o=SceneJS_math_transformVector3(l,m),p=[0,0,0],SceneJS_math_mulVec3(o,b,p),SceneJS_math_subVec3(o,p),t=[0,0,0],SceneJS_math_cross3Vec3(i,o,t),k={eye:y(i),look:c.look,up:y(t)})},p=function(a,b,c){return a.set(o(b,c,{eye:a.get("eye"),look:a.get("look"),up:a.get("up")}))},B=function(a,b,c){var d,e,f,g,h,i;return d=q(c.eye),h=q(c.look),e=SceneJS_math_lenVec3(d),b!=null?g=Math.clamp(e+a,b[0],b[1]):g=e+a,f=[0,0,0],SceneJS_math_mulVec3Scalar(d,g/e,f),i={eye:y(f),look:c.look,up:c.up}},C=function(a,b,c){return a.set(B(b,c,{eye:a.get("eye"),look:a.get("look"),up:a.get("up")}))},a=function(){var a,b,c,d,e,f;a=arguments[0],c=2<=arguments.length?D.call(arguments,1):[],console.log(a),f=[];for(d=0,e=c.length;d<e;d++)b=c[d],f.push(console.log(b));return f},f=function(){var a,b,c,d,e,f;a=arguments[0],c=2<=arguments.length?D.call(arguments,1):[],console.log(a),f=[];for(d=0,e=c.length;d<e;d++)b=c[d],f.push(console.log(b));return f},w=function(){var a,b,c,d,e,f;a=arguments[0],c=2<=arguments.length?D.call(arguments,1):[],console.log(a),f=[];for(d=0,e=c.length;d<e;d++)b=c[d],f.push(console.log(b));return f},{compileASM:function(a){return{}},compileGLSL:function(a){return"uniform float radius;\n  float sceneRayDist(in vec3 p, in float r, in vec3 d) {\n    return length(p)-r;\n  }\n  float sphereDist(in vec3 p, in float r) {\n    return length(p)-r;\n  }\n  float _intersect(in float a, in float b) {\n    return max(a,b);\n  }\n  float _difference(in float a, in float b) {\n    return max(a,-b);\n  }\n  float _union(in float a, in float b) {\n    return min(a,b);\n  }\n  \n  float sceneDist(in vec3 rayOrigin){\n    /*return sphereDist(vec3(0.0,0.0,0.0)-rayOrigin, 0.99);*/\n    return _union(sphereDist(rayOrigin - vec3(0.5,0.0,0.0), 0.49), sphereDist(rayOrigin - vec3(-0.5,0.0,0.0), 0.49));\n    /*return _difference(sphereDist(vec3(0.5,0.0,0.0) - rayOrigin, 0.49), sphereDist(vec3(-0.5,0.0,0.0) - rayOrigin, 0.49));*/\n  }\n  \n  float sceneRayDist(in vec3 rayOrigin, in vec3 rayDir) {\n    /*return sceneRayDist(vec3(0.0,0.0,0.0)-rayOrigin, 0.99, rayDir);*/\n    return _union(sceneRayDist(rayOrigin - vec3(0.5,0.0,0.0), 0.49, rayDir), sceneRayDist(rayOrigin - vec3(-0.5,0.0,0.0), 0.49, rayDir));\n    /*return _difference(rayOrigin - sceneRayDist(vec3(0.5,0.0,0.0), 0.49, rayDir), sceneRayDist(rayOrigin - vec3(-0.5,0.0,0.0), 0.49, rayDir));*/\n  }\n  \n  vec3 sceneNormal( in vec3 pos )\n  {\n    const float eps = 0.0001;\n    vec3 n;\n    n.x = sceneDist( vec3(pos.x+eps, pos.yz) ) - sceneDist( vec3(pos.x-eps, pos.yz) );\n    n.y = sceneDist( vec3(pos.x, pos.y+eps, pos.z) ) - sceneDist( vec3(pos.x, pos.y-eps, pos.z) );\n    n.z = sceneDist( vec3(pos.xy, pos.z+eps) ) - sceneDist( vec3(pos.xy, pos.z-eps) );\n    return normalize(n);\n  }\n  void foo(void) {\n    const int steps = 64;\n    const float threshold = 0.01;\n    vec3 rayDir = /*normalize*/(/*SCENEJS_uMMatrix * */SCENEJS_vEyeVec);\n    vec3 rayOrigin = SCENEJS_vWorldVertex.xyz;\n    bool hit = false;\n    float dist = 0.0;\n    for(int i = 0; i < steps; i++) {\n      dist = sceneRayDist(rayOrigin, rayDir);\n      if (dist < threshold) {\n        hit = true;\n        break;\n      }\n      rayOrigin += dist * rayDir;\n    }\n    \n    if(!hit) { discard; }\n    /*if(!hit) { gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0); return; }*/\n    \n    const vec3 diffuseColor = vec3(0.1, 0.2, 0.8);\n    const vec3 lightPos = vec3(0.8,4.0, 0.8);\n    vec3 ldir = normalize(lightPos - rayOrigin);\n    vec3 diffuse = diffuseColor * dot(sceneNormal(rayOrigin), ldir);\n    gl_FragColor = vec4(diffuse, 1.0);\n  }\n"}},c={canvas:{defaultSize:[512,512]},camera:{maxOrbitSpeed:Math.PI*.1,orbitSpeedFactor:.01,zoomSpeedFactor:.5}},Math.clamp=function(a,b,c){return Math.min(Math.max(a,b),c)},x={scene:SceneJS.scene("Scene"),canvas:document.getElementById("scenejsCanvas"),viewport:{domElement:document.getElementById("viewport"),mouse:{last:[0,0],leftDragging:!1,middleDragging:!1}},application:{initialized:!1}},j=function(a){var b,c,d,e;b=[0,0];if(!a)a=window.event,b=[a.x,a.y];else{c=a.target,d=0,e=0;while(c.offsetParent)d+=c.offsetLeft,e+=c.offsetTop,c=c.offsetParent;b=[a.pageX-d,a.pageY-e]}return b},A=function(){},k=function(a){switch(a.which){case 1:return x.viewport.mouse.leftDragging=!0}},m=function(a){return x.viewport.mouse.leftDragging=!1},l=function(a){var b,d,e;return x.viewport.mouse.leftDragging&&(b=[a.clientX-x.viewport.mouse.last[0],a.clientY-x.viewport.mouse.last[1]],d=SceneJS_math_lenVec2(b),e=[0,0],SceneJS_math_mulVec2Scalar(b,c.camera.orbitSpeedFactor/d,e),e=[Math.clamp(e[0],-c.camera.maxOrbitSpeed,c.camera.maxOrbitSpeed),Math.clamp(e[1],-c.camera.maxOrbitSpeed,c.camera.maxOrbitSpeed)],p(x.scene.findNode("main-lookAt"),e,[0,0,1])),x.viewport.mouse.last=[a.clientX,a.clientY]},n=function(a){var b,d;return b=a.wheelDelta!=null?a.wheelDelta/-120:Math.clamp(a.detail,-1,1),d=b*c.camera.zoomSpeedFactor,C(x.scene.findNode("main-lookAt"),d)},g=function(a){},e=function(){console.log("hello");try{return x.scene.findNode("cube-transform").set("shaders",[{stage:"fragment",code:compileGLSL(compileAST($("#source-code").val()))}])}catch(a){if(typeof console!="undefined"&&console!==null&&console.log!=null)return console.log(a)}},t=function(){return x.viewport.domElement.addEventListener("mousedown",k,!0),x.viewport.domElement.addEventListener("mouseup",m,!0),x.viewport.domElement.addEventListener("mousemove",l,!0),x.viewport.domElement.addEventListener("mousewheel",n,!0),x.viewport.domElement.addEventListener("DOMMouseScroll",n,!0),document.addEventListener("keydown",g,!0),window.addEventListener("resize",A,!0)},s=function(){return $("#source-compile").click(e)},u=function(){},b=function(){return A()},v=function(){var a;return a={type:"shader",id:"main-shader",shaders:[{stage:"fragment",code:""}],vars:{}},x.scene.findNode("cube-transform").insert("node",a)},d=function(){},b(),v(),x.scene.start({idleFunc:u}),$(function(){return d(),t(),s(),x.application.initialized=!0})}.call(this);
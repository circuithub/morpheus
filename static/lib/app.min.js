/*
 * Copyright header comes here
 */"use strict",function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F=Array.prototype.slice;k=function(a,b,c,d){var e;return e=a.get(b),e[c]=d,a.set(b,e)},s=function(a){return[a.x,a.y,a.z]},t=function(a){return[a.x,a.y,a.z,a.w]},A=function(a){return{x:a[0],y:a[1],z:a[2]}},B=function(a){return{x:a[0],y:a[1],z:a[2],w:a[3]}},j=function(a){var b,c,d,e,f,g;return b=s(a.eye),c=s(a.look),d=s(a.up),e=[0,0,0],f=[0,0,0],g=[0,0,0],SceneJS_math_subVec3(c,b,g),SceneJS_math_cross3Vec3(d,g,e),SceneJS_math_cross3Vec3(g,e,f),SceneJS_math_normalizeVec3(e),SceneJS_math_normalizeVec3(f),SceneJS_math_normalizeVec3(g),SceneJS_math_newQuaternionFromMat3(e.concat(f,g))},q=function(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,t;return a[0]===0&&a[1]===0?{eye:c.eye,up:c.up}:(f=s(c.eye),q=s(c.up),j=s(c.look),g=SceneJS_math_lenVec3(f),h=[0,0,0],SceneJS_math_mulVec3Scalar(f,1/g,h),m=[0,0,0],SceneJS_math_cross3Vec3(q,f,m),n=SceneJS_math_normalizeVec3(m),r=[0,0,0],SceneJS_math_cross3Vec3(h,n,r),d=[n[0]*-a[1]+r[0]*-a[0],n[1]*-a[1]+r[1]*-a[0],n[2]*-a[1]+r[2]*-a[0]],e=SceneJS_math_lenVec2(a),l=SceneJS_math_rotationMat4v(e,d),i=SceneJS_math_transformVector3(l,f),o=SceneJS_math_transformVector3(l,m),p=[0,0,0],SceneJS_math_mulVec3(o,b,p),SceneJS_math_subVec3(o,p),t=[0,0,0],SceneJS_math_cross3Vec3(i,o,t),k={eye:A(i),look:c.look,up:A(t)})},r=function(a,b,c){return a.set(q(b,c,{eye:a.get("eye"),look:a.get("look"),up:a.get("up")}))},D=function(a,b,c){var d,e,f,g,h,i;return d=s(c.eye),h=s(c.look),e=SceneJS_math_lenVec3(d),b!=null?g=Math.clamp(e+a,b[0],b[1]):g=e+a,f=[0,0,0],SceneJS_math_mulVec3Scalar(d,g/e,f),i={eye:A(f),look:c.look,up:c.up}},E=function(a,b,c){return a.set(D(b,c,{eye:a.get("eye"),look:a.get("look"),up:a.get("up")}))},a=function(){var a,b,c,d,e,f;a=arguments[0],c=2<=arguments.length?F.call(arguments,1):[],console.log(a),f=[];for(d=0,e=c.length;d<e;d++)b=c[d],f.push(console.log(b));return f},h=function(){var a,b,c,d,e,f;a=arguments[0],c=2<=arguments.length?F.call(arguments,1):[],console.log(a),f=[];for(d=0,e=c.length;d<e;d++)b=c[d],f.push(console.log(b));return f},y=function(){var a,b,c,d,e,f;a=arguments[0],c=2<=arguments.length?F.call(arguments,1):[],console.log(a),f=[];for(d=0,e=c.length;d<e;d++)b=c[d],f.push(console.log(b));return f},c=function(a){return{}},d=function(a){return"#ifdef GL_ES\n  precision highp float;\n#endif\n\n//attribute vec3 SCENEJS_aVertex;           // Model coordinates\nuniform vec3 SCENEJS_uEye;                  // World-space eye position\nvarying vec3 SCENEJS_vEyeVec;               // Output world-space eye vector\n// attribute vec3 SCENEJS_aNormal;          // Normal vectors\n// uniform   mat4 SCENEJS_uMNMatrix;        // Model normal matrix\n// uniform   mat4 SCENEJS_uVNMatrix;        // View normal matrix\n// varying   vec3 SCENEJS_vWorldNormal;     // Output world-space vertex normal\n// varying   vec3 SCENEJS_vViewNormal;      // Output view-space vertex normal\n// uniform vec3 SCENEJS_uLightDir0;\n// uniform vec4 SCENEJS_uLightPos0;\n// uniform vec4 SCENEJS_uLightPos0;\n// varying vec4 SCENEJS_vLightVecAndDist0;  // varying for fragment lighting\n// attribute vec2 SCENEJS_aUVCoord;         // UV coords\n// attribute vec2 SCENEJS_aUVCoord2;        // UV2 coords\n// attribute vec4 SCENEJS_aVertexColor;     // UV2 coords\n// varying vec4 SCENEJS_vColor;             // Varying for fragment texturing\n// uniform mat4 SCENEJS_uMMatrix;           // Model matrix\n// uniform mat4 SCENEJS_uVMatrix;           // View matrix\n// uniform mat4 SCENEJS_uPMatrix;           // Projection matrix\nvarying vec4 SCENEJS_vWorldVertex;          // Varying for fragment clip or world pos hook\n// varying vec4 SCENEJS_vViewVertex;        // Varying for fragment view clip hook\n// varying vec2 SCENEJS_vUVCoord;\n// varying vec2 SCENEJS_vUVCoord2;\nuniform float radius;\n\nfloat sphereRayDist(in vec3 p, in float r, in vec3 d) {\n  return length(p)-r;\n}\nfloat sphereDist(in vec3 p, in float r) {\n  return length(p)-r;\n}\nfloat boxDist(in vec3 p, in vec3 c, in vec3 r) {\n  vec3 rel = abs(p - c);\n  if (all(lessThan(rel, r)))\n    return 0.0;\n  vec3 d = max(vec3(0.0), rel - r);\n  return max(max(d.x, d.y), d.z);\n}\nfloat box_chamferDist(in vec3 p, in vec3 c, in vec3 r, in float cr) {\n  vec3 rel = abs(p - c);\n  vec3 d = max(vec3(0.0), rel - r);\n\n  // Optimization: Approximation\n  //if (any(greaterThan(rel, r + vec3(cr)))) { return max(max(d.x, d.y), d.z); }\n\n  // Quick inner box test (might not be necessary if we assume camera is outside bounding box)\n  vec3 cr_center = r - vec3(cr);\n  bvec3 gtCrCenter = greaterThan(rel, cr_center);\n  if (!any(gtCrCenter)) { return 0.0; }\n\n  // Distance to box sides (if at least two dimensions are inside the inner box)\n  vec3 dcr = rel - cr_center;\n  if (min(dcr.x, dcr.y) < 0.0 && min(dcr.x, dcr.z) < 0.0 && min(dcr.y, dcr.z) < 0.0) { return max(max(d.x, d.y), d.z); }\n\n  // Distance to corner chamfer\n  float dcr_length;\n  if (all(gtCrCenter)) {\n    dcr_length = length(dcr);\n  }\n  // Distance to edge chamfer\n  else if(dcr.x < 0.0) {\n    dcr_length = length(dcr.yz);\n  }\n  else if (dcr.y < 0.0) {\n    dcr_length = length(dcr.xz);\n  }\n  else { // dcr.z < 0.0\n    dcr_length = length(dcr.xy);\n  }\n  if (dcr_length < cr) { return 0.0; }\n  return dcr_length - cr;\n}\nfloat _intersect(in float a, in float b) {\n  return max(a,b);\n}\nfloat _difference(in float a, in float b) {\n  return max(a,-b);\n}\nfloat _union(in float a, in float b) {\n  return min(a,b);\n}\n\nfloat sceneDist(in vec3 rayOrigin){\n  /*return sphereDist(vec3(0.0,0.0,0.0)-rayOrigin, 0.99);*/\n  float b = box_chamferDist(rayOrigin, vec3(0.0), vec3(0.55), 0.1);\n  float s1 = sphereDist(rayOrigin - vec3(0.3,0.0,0.1), 0.59);\n  float s2 = sphereDist(rayOrigin - vec3(-0.3,0.0,-0.1), 0.59);\n  return b;\n  return _union(\n    _intersect(s1, b),\n    _intersect(s2, b));\n  /*return _union(\n    sphereDist(rayOrigin - vec3(0.5,0.0,0.0), 0.49),\n    sphereDist(rayOrigin - vec3(-0.5,0.0,0.0), 0.49));*/\n  /*return _difference(sphereDist(vec3(0.5,0.0,0.0) - rayOrigin, 0.49), sphereDist(vec3(-0.5,0.0,0.0) - rayOrigin, 0.49));*/\n}\n\nfloat sceneRayDist(in vec3 rayOrigin, in vec3 rayDir) {\n  /*return sceneRayDist(vec3(0.0,0.0,0.0)-rayOrigin, 0.99, rayDir);*/\n  return _union(\n    _union(sphereRayDist(rayOrigin - vec3(0.5,0.0,0.0), 0.49, rayDir), boxDist(rayOrigin, vec3(0.0), vec3(0.3))),\n    sphereRayDist(rayOrigin - vec3(-0.5,0.0,0.0), 0.49, rayDir));\n  /*return _difference(rayOrigin - sceneRayDist(vec3(0.5,0.0,0.0), 0.49, rayDir), sceneRayDist(rayOrigin - vec3(-0.5,0.0,0.0), 0.49, rayDir));*/\n}\n\nvec3 sceneNormal( in vec3 pos )\n{\n  const float eps = 0.0001;\n  vec3 n;\n  n.x = sceneDist( vec3(pos.x+eps, pos.yz) ) - sceneDist( vec3(pos.x-eps, pos.yz) );\n  n.y = sceneDist( vec3(pos.x, pos.y+eps, pos.z) ) - sceneDist( vec3(pos.x, pos.y-eps, pos.z) );\n  n.z = sceneDist( vec3(pos.xy, pos.z+eps) ) - sceneDist( vec3(pos.xy, pos.z-eps) );\n  return normalize(n);\n}\nvoid main(void) {\n  const int steps = 64;\n  const float threshold = 0.01;\n  vec3 rayDir = /*normalize*/(/*SCENEJS_uMMatrix * */ SCENEJS_vEyeVec);\n  vec3 rayOrigin = SCENEJS_vWorldVertex.xyz;\n  bool hit = false;\n  float dist = 0.0;\n  for(int i = 0; i < steps; i++) {\n    //dist = sceneRayDist(rayOrigin, rayDir);\n    dist = sceneDist(rayOrigin);\n    if (dist < threshold) {\n      hit = true;\n      break;\n    }\n    rayOrigin += dist * rayDir;\n  }\n  if(!hit) { discard; }\n  /*if(!hit) { gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0); return; }*/\n  const vec3 diffuseColor = vec3(0.1, 0.2, 0.8);\n  /*const vec3 specularColor = vec3(1.0, 1.0, 1.0);*/\n  const vec3 lightPos = vec3(0.8,4.0, 0.8);\n  vec3 ldir = normalize(lightPos - rayOrigin);\n  vec3 diffuse = diffuseColor * dot(sceneNormal(rayOrigin), ldir);\n  gl_FragColor = vec4(diffuse, 1.0);\n}"},e={canvas:{defaultSize:[512,512]},camera:{maxOrbitSpeed:Math.PI*.1,orbitSpeedFactor:.01,zoomSpeedFactor:.5}},Math.clamp=function(a,b,c){return Math.min(Math.max(a,b),c)},z={scene:SceneJS.scene("Scene"),canvas:document.getElementById("scenejsCanvas"),viewport:{domElement:document.getElementById("viewport"),mouse:{last:[0,0],leftDragging:!1,middleDragging:!1}},application:{initialized:!1}},l=function(a){var b,c,d,e;b=[0,0];if(!a)a=window.event,b=[a.x,a.y];else{c=a.target,d=0,e=0;while(c.offsetParent)d+=c.offsetLeft,e+=c.offsetTop,c=c.offsetParent;b=[a.pageX-d,a.pageY-e]}return b},C=function(){},m=function(a){switch(a.which){case 1:return z.viewport.mouse.leftDragging=!0}},o=function(a){return z.viewport.mouse.leftDragging=!1},n=function(a){var b,c,d;return z.viewport.mouse.leftDragging&&(b=[a.clientX-z.viewport.mouse.last[0],a.clientY-z.viewport.mouse.last[1]],c=SceneJS_math_lenVec2(b),d=[0,0],SceneJS_math_mulVec2Scalar(b,e.camera.orbitSpeedFactor/c,d),d=[Math.clamp(d[0],-e.camera.maxOrbitSpeed,e.camera.maxOrbitSpeed),Math.clamp(d[1],-e.camera.maxOrbitSpeed,e.camera.maxOrbitSpeed)],r(z.scene.findNode("main-lookAt"),d,[0,0,1])),z.viewport.mouse.last=[a.clientX,a.clientY]},p=function(a){var b,c;return b=a.wheelDelta!=null?a.wheelDelta/-120:Math.clamp(a.detail,-1,1),c=b*e.camera.zoomSpeedFactor,E(z.scene.findNode("main-lookAt"),c)},i=function(a){},g=function(){try{return z.scene.findNode("main-shader").set("shaders",[{stage:"fragment",code:d(c($("#source-code").val()))}])}catch(a){if(typeof console!="undefined"&&console!==null&&console.log!=null)return console.log(a)}},v=function(){return z.viewport.domElement.addEventListener("mousedown",m,!0),z.viewport.domElement.addEventListener("mouseup",o,!0),z.viewport.domElement.addEventListener("mousemove",n,!0),z.viewport.domElement.addEventListener("mousewheel",p,!0),z.viewport.domElement.addEventListener("DOMMouseScroll",p,!0),document.addEventListener("keydown",i,!0),window.addEventListener("resize",C,!0)},u=function(){return $("#source-compile").click(g)},w=function(){},b=function(){return C()},x=function(){var a;return a={type:"shader",id:"main-shader",shaders:[{stage:"fragment",code:d(c({}))}],vars:{}},z.scene.findNode("cube-mat").insert("node",a)},f=function(){},b(),x(),z.scene.start({idleFunc:w}),$(function(){return f(),v(),u(),z.application.initialized=!0})}.call(this);
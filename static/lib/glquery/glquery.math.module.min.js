/*
 * glQuery-math - A math module from a fluent WebGL engine (https://github.com/glQuery)
 * glQuery-math is free, public domain software (http://creativecommons.org/publicdomain/zero/1.0/)
 * Originally created by Rehno Lindeque of http://www.mischievousmeerkat.com
 */
var glQueryMath = new (function() {
"use strict";

var glQueryMath=this!=null?this:window,MathMemoryPool={matrix4:[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],matrix3:[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],matrix2:[[0,0,0,0],[0,0,0,0]],vector4:[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]],vector3:[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],vector2:[[0,0],[0,0],[0,0],[0,0]]};glQueryMath.vec2={},glQueryMath.vec2.add=function(a,b,c){return a[0]=b[0]+c[0],a[1]=b[1]+c[1],a},glQueryMath.vec2.subtract=function(a,b,c){return a[0]=b[0]-c[0],a[1]=b[1]-c[1],a},glQueryMath.vec2.neg=function(a,b){a[0]=-b[0],a[1]=-b[1]},glQueryMath.vec2.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]},glQueryMath.vec2.length=function(a){return Math.sqrt(a[0]*a[0]+a[1]*a[1])},glQueryMath.vec3={},glQueryMath.vec3.add=function(a,b,c){return a[0]=b[0]+c[0],a[1]=b[1]+c[1],a[2]=b[2]+c[2],a},glQueryMath.vec3.sub=function(a,b,c){return a[0]=b[0]-c[0],a[1]=b[1]-c[1],a[2]=b[2]-c[2],a},glQueryMath.vec3.mul=function(a,b,c){return a[0]=b[0]*c,a[1]=b[1]*c,a[2]=b[2]*c,a},glQueryMath.vec3.div=function(a,b,c){return a[0]=b[0]/c,a[1]=b[1]/c,a[2]=b[2]/c,a},glQueryMath.vec3.neg=function(a,b){return a[0]=-b[0],a[1]=-b[1],a[2]=-b[2],a},glQueryMath.vec3.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]},glQueryMath.vec3.cross=function(a,b,c){return a[0]=b[1]*c[2]-b[2]*c[1],a[1]=b[2]*c[0]-b[0]*c[2],a[2]=b[0]*c[1]-b[1]*c[0],a},glQueryMath.vec3.length=function(a){return Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2])},glQueryMath.vec3.normalize=function(a,b){return glQueryMath.vec3.div(a,b,glQueryMath.vec3.length(b))},glQueryMath.vec4={},glQueryMath.vec4.add=function(a,b,c){return a[0]=b[0]+c[0],a[1]=b[1]+c[1],a[2]=b[2]+c[2],a[3]=b[3]+c[3],a},glQueryMath.vec4.subtract=function(a,b,c){return a[0]=b[0]-c[0],a[1]=b[1]-c[1],a[2]=b[2]-c[2],a[3]=b[3]-c[3],a},glQueryMath.vec4.neg=function(a,b){a[0]=-b[0],a[1]=-b[1],a[2]=-b[2],a[3]=-b[3]},glQueryMath.vec4.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3]},glQueryMath.vec4.length=function(a){return Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]+a[3]*a[3])},glQueryMath.matrix3={},glQueryMath.matrix3.mul=function(a,b,c){var d=MathMemoryPool.matrix3[0];d[0]=b[0]*c[0]+b[1]*c[3]+b[2]*c[6],d[1]=b[0]*c[1]+b[1]*c[4]+b[2]*c[7],d[2]=b[0]*c[2]+b[1]*c[5]+b[2]*c[8],d[3]=b[3]*c[0]+b[4]*c[3]+b[5]*c[6],d[4]=b[3]*c[1]+b[4]*c[4]+b[5]*c[7],d[5]=b[3]*c[2]+b[4]*c[5]+b[5]*c[8],d[6]=b[6]*c[0]+b[7]*c[3]+b[8]*c[6],d[7]=b[6]*c[1]+b[7]*c[4]+b[8]*c[7],d[8]=b[6]*c[2]+b[7]*c[5]+b[8]*c[8];for(var e=0;e<9;++e)a[e]=d[e]},glQueryMath.matrix3.newAxisRotation=function(a,b){var c=Math.sqrt(a[0]*a[0],a[1]*a[1],a[2]*a[2]),d=b*.5,e=Math.sin(d)/c,f=a[0]*e,g=a[1]*e,h=a[2]*e,i=Math.cos(d),j=f*f,k=f*g,l=f*h,m=f*i,n=g*g,o=g*h,p=g*i,q=h*h,r=h*i;return[1-2*(n+q),2*(k+r),2*(l-p),2*(k-r),1-2*(j+q),2*(o+m),2*(l+p),2*(o-m),1-2*(j+n)]},glQueryMath.matrix3.newIdentity=function(){return[1,0,0,0,1,0,0,0,1]},glQueryMath.matrix4={},glQueryMath.matrix4.newAxisRotation=function(a,b){var c=Math.sqrt(a[0]*a[0],a[1]*a[1],a[2]*a[2]),d=b*.5,e=Math.sin(d)/c,f=a[0]*e,g=a[1]*e,h=a[2]*e,i=Math.cos(d),j=f*f,k=f*g,l=f*h,m=f*i,n=g*g,o=g*h,p=g*i,q=h*h,r=h*i;return[1-2*(n+q),2*(k+r),2*(l-p),0,2*(k-r),1-2*(j+q),2*(o+m),0,2*(l+p),2*(o-m),1-2*(j+n),0,0,0,0,1]},glQueryMath.matrix4.newIdentity=function(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]},glQueryMath.matrix4.newRows=function(a,b,c,d){return[].concat(a,b,c,d)},glQueryMath.matrix4.newColumns=function(a,b,c,d){return[a[0],b[0],c[0],d[0],a[1],b[1],c[1],d[1],a[2],b[2],c[2],d[2],a[3],b[3],c[3],d[3]]},glQueryMath.matrix4.newOrtho=function(a,b,c,d,e,f){var g=a-b,h=c-d,i=e-f;return[-2/g,0,0,0,0,-2/h,0,0,0,0,2/i,0,(a+b)/g,(d+c)/h,(f+e)/i,1]},glQueryMath.matrix4.newLookAt=function(a,b,c){var d=MathMemoryPool.vector4[0],e=MathMemoryPool.vector4[1],f=MathMemoryPool.vector4[2],g=MathMemoryPool.vector4[3];return glQueryMath.vec3.sub(f,a,b),glQueryMath.vec3.cross(d,c,f),glQueryMath.vec3.normalize(d,d),glQueryMath.vec3.normalize(f,f),glQueryMath.vec3.cross(e,f,d),d[3]=-glQueryMath.vec3.dot(d,a),e[3]=-glQueryMath.vec3.dot(e,a),f[3]=-glQueryMath.vec3.dot(f,a),g[0]=0,g[1]=0,g[2]=0,g[3]=1,glQueryMath.matrix4.newColumns(d,e,f,g)};
// Extend glQuery if it is defined
if (typeof glQuery !== 'undefined' && glQuery != null)
  for(var key in glQueryMath)
    if (glQuery[key] == null)
      glQuery[key] = glQueryMath[key];
return glQueryMath;

})();

